{"version":3,"sources":["components/Container.js","components/Title.js","components/Row.js","components/Input.js","components/Button.js","components/List.js","components/ListItem.js","components/Grid.js","updaters.js","App.js","index.js"],"names":["styled","div","h1","input","props","completed","flex","align","color","addTask","task","store","tasks","push","text","handleCompleted","index","completeAll","checked","forEach","collect","useState","setTask","setChecked","Container","Title","Row","Input","value","placeholder","onChange","event","target","Button","onClick","List","length","ListItem","Grid","type","map","key","initStore","counter","ReactDOM","render","document","getElementById"],"mappings":"kgBAEeA,UAAOC,IAAtB,K,4FCAeD,UAAOE,GAAtB,K,2FCAeF,UAAOC,IAAtB,K,wKCAeD,UAAOG,MAAtB,K,mOCAeH,UAAOC,IAAtB,K,4FCAeD,UAAOC,IAAtB,K,4JCAeD,UAAOC,IAAtB,KAGuB,SAAAG,GAAK,OAAIA,EAAMC,UAAY,eAAiB,WACtD,SAAAD,GAAK,OAAIA,EAAMC,UAAY,UAAY,a,4MCJrCL,UAAOC,IAAtB,KACY,SAAAG,GAAK,OAAIA,EAAME,MAAQ,OACjB,SAAAF,GAAK,OAAIA,EAAMG,OAAS,UAC7B,SAAAH,GAAK,OAAIA,EAAMI,OAAS,aCHxBC,EAAU,SAAAC,GACnBC,QAAMC,MAAMC,KAAK,CACbC,KAAMJ,EACNL,WAAW,KAINU,EAAkB,SAAAC,GAC3BL,QAAMC,MAAMI,GAAOX,WAAaM,QAAMC,MAAMI,GAAOX,WAG1CY,EAAc,SAACC,GACnBA,EAGDP,QAAMC,MAAMO,SAAQ,SAAAT,GAAI,OAAIA,EAAKL,WAAY,KAF7CM,QAAMC,MAAMO,SAAQ,SAAAT,GAAI,OAAIA,EAAKL,WAAY,MCsDtCe,qBAnDH,SAAC,GAAe,IAAbT,EAAY,EAAZA,MAAY,EACCU,mBAAS,IADV,mBAChBX,EADgB,KACVY,EADU,OAEOD,oBAAS,GAFhB,mBAEhBH,EAFgB,KAEPK,EAFO,KAUvB,OACI,kBAACC,EAAD,KACI,kBAACC,EAAD,kCACA,kBAACC,EAAD,KACI,kBAACC,EAAD,CACIC,MAAOlB,EACPmB,YAAY,kBACZC,SAAU,SAACC,GAAD,OAAWT,EAAQS,EAAMC,OAAOJ,UAE9C,kBAACK,EAAD,CAAQC,QAAS,kBAAMzB,EAAQC,KAA/B,QAEJ,kBAACyB,EAAD,KACKxB,EAAMC,MAAMwB,OAAS,GAClB,kBAACC,EAAD,KACI,kBAACC,EAAD,CAAM/B,MAAM,SAASD,KAAK,SACtB,2BACIiC,KAAK,WACLrB,QAASA,EACTY,SAxBF,WACtBb,EAAYC,GAEZK,GAAYL,OAwBI,kBAACoB,EAAD,oBAGP3B,EAAMC,MAAM4B,KAAI,SAAC9B,EAAMM,GAAP,OACb,kBAACqB,EAAD,CAAUI,IAAKzB,EAAOX,UAAWK,EAAKL,WAClC,kBAACiC,EAAD,CAAM/B,MAAM,SAASD,KAAK,SACtB,2BACIiC,KAAK,WACLrB,QAASR,EAAKL,UACdyB,SAAU,kBAAMf,EAAgBC,OAGxC,kBAACsB,EAAD,KAAO5B,EAAKI,e,MCtDpC4B,oBAAU,CACN9B,MAAO,GACP+B,QAAS,IAGbC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.dcb76234.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    max-width: 520px;\r\n    width: 100%;\r\n    min-height: 320px;\r\n    padding: 16px 32px;\r\n    background: #ffffff;\r\n    border: 1px solid rgba(0, 0, 0, 0.12);\r\n    margin: 40px auto;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default styled.h1`\r\n    color: #333333;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    display: flex;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default styled.input`\r\n    width: 100%;\r\n    padding: 8px 16px;\r\n    box-shadow: none;\r\n    border: 1px solid #aaaaaa;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    margin-left: 24px;\r\n    border: 1px solid #aaaaaa;\r\n    padding: 8px 16px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        background: #eeeeee;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    margin: 24px 0;\r\n`;","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    display: flex;\r\n    padding: 8px 0;\r\n    text-decoration: ${props => props.completed ? 'line-through' : 'unset'};\r\n    color: ${props => props.completed ? '#999999' : 'inherit'};\r\n`;","import styled from 'styled-components';\r\n\r\nexport default styled.div`\r\n    flex: ${props => props.flex || '1'};\r\n    text-align: ${props => props.align || 'left'};\r\n    color: ${props => props.color || 'inherit'};\r\n    margin-left: 8px;\r\n\r\n    &:first-child {\r\n        margin-left: 0;\r\n    }\r\n`;","import { store } from 'react-recollect';\r\n\r\nexport const addTask = task => {\r\n    store.tasks.push({\r\n        text: task,\r\n        completed: false,\r\n    });\r\n};\r\n\r\nexport const handleCompleted = index => {\r\n    store.tasks[index].completed = !store.tasks[index].completed;\r\n};\r\n\r\nexport const completeAll = (checked) => {\r\n    if (!checked) {\r\n        store.tasks.forEach(task => task.completed = true);\r\n    } else {\r\n        store.tasks.forEach(task => task.completed = false);\r\n    }\r\n};\r\n\r\nexport default {\r\n    addTask,\r\n    handleCompleted,\r\n    completeAll,\r\n};","import React, { useState } from 'react';\r\nimport { collect } from 'react-recollect';\r\n\r\nimport Container from './components/Container';\r\nimport Title from './components/Title';\r\nimport Row from './components/Row';\r\nimport Input from './components/Input';\r\nimport Button from './components/Button';\r\nimport List from './components/List';\r\nimport ListItem from './components/ListItem';\r\nimport Grid from './components/Grid';\r\n\r\nimport {\r\n    addTask,\r\n    handleCompleted,\r\n    completeAll,\r\n} from './updaters';\r\n\r\nconst App = ({ store }) => {\r\n    const [task, setTask] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const handleCompleteAll = () => {\r\n        completeAll(checked);\r\n\r\n        setChecked(!checked);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Title>Recollect DEMO - Todolist</Title>\r\n            <Row>\r\n                <Input\r\n                    value={task}\r\n                    placeholder=\"Add new task...\"\r\n                    onChange={(event) => setTask(event.target.value)}\r\n                />\r\n                <Button onClick={() => addTask(task)}>Add</Button>\r\n            </Row>\r\n            <List>\r\n                {store.tasks.length > 0 && (\r\n                    <ListItem>\r\n                        <Grid align=\"center\" flex=\"unset\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={checked}\r\n                                onChange={handleCompleteAll}\r\n                            />\r\n                        </Grid>\r\n                        <Grid>Select All</Grid>\r\n                    </ListItem>\r\n                )}\r\n                {store.tasks.map((task, index) => (\r\n                    <ListItem key={index} completed={task.completed}>\r\n                        <Grid align=\"center\" flex=\"unset\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={task.completed}\r\n                                onChange={() => handleCompleted(index)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid>{task.text}</Grid>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default collect(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { initStore } from 'react-recollect';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\n\r\ninitStore({\r\n    tasks: [],\r\n    counter: 0,\r\n});\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}